import { AppSidebar } from "@/components/AppSidebar";
import Navbar from "@/components/Navbar";
import { SidebarProvider } from "@/components/ui/sidebar";
import { getMe } from "@/lib/api/user";
import { WEBSITE_NAME } from "@/lib/config";
import { getQueryClient } from "@/lib/getQueryClient";
import { dehydrate, HydrationBoundary } from "@tanstack/react-query";
import { Metadata } from "next";
import { cookies } from "next/headers";

export const metadata: Metadata = {
  title: {
    template: `%s | ${WEBSITE_NAME}`,
    default: `${WEBSITE_NAME}`,
  },
  description: "Generated by create next app",
};

// export const metadata: Metadata = {
//   title: WEBSITE_NAME,
//   description: `${WEBSITE_NAME} `,
//   metadataBase: new URL("https://it-udvc-pms.vercel.app/"),
//   twitter: {
//     card: "summary_large_image",
//     site: "it-udvc-pms.vercel.app",
//     title: WEBSITE_NAME,
//     description: `${WEBSITE_NAME} `,
//     images: ["https://it-udvc-pms.vercel.app/picture1.jpg"],
//   },
//   openGraph: {
//     title: WEBSITE_NAME,
//     description: `${WEBSITE_NAME} `,
//     images: ["https://it-udvc-pms.vercel.app/picture1.jpg"],
//   },
//   icons: {
//     icon: "/favicon.ico",
//   },
// };

export default async function Layout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookieStore = await cookies();
  const authToken = cookieStore.get("auth")?.value;

  if (authToken) {
    const queryClient = getQueryClient();
    await queryClient.prefetchQuery({
      queryKey: ["user-me"],
      queryFn: getMe,
    });

    return (
      <HydrationBoundary state={dehydrate(queryClient)}>
        <SidebarProvider>
          <div className="flex h-screen w-full ">
            <AppSidebar />
            <div className="flex flex-col flex-1  ">
              <Navbar />
              <main className="flex-1 overflow-y-auto ">{children}</main>
            </div>
          </div>
        </SidebarProvider>
      </HydrationBoundary>
    );
  }
  return <main className="flex-1 overflow-y-auto ">{children}</main>;
}
